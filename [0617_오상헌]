import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		
//  문제  1		
//		*****
//		 ****
//		  ***
//		   **
//		    *
		
		
		
		Scanner sc= new Scanner(System.in);
		int n= sc.nextInt() ;	//입력 n번쨰
		
		for(int i=1; i<=n; i++) {      //n번 반복 
			for (int j=1 ; j<i; j++) {	//  #####		//5번 반복의 경우
//											@####
//											@@###
//											@@@##
//											@@@@#		@넣어주면 나오는 모양
				
				System.out.print(" ");
			}
			for(int j=n; j>=i; j--) {	// 위에서부터 찍고 내려와야하기 때문에 j=n
				System.out.print("*");
			}
			System.out.println();
		}
		
		
		
	//문제2	
//		오늘은 2007년 1월 1일 월요일이다. 그렇다면 2007년 x월 y일은 무슨 요일일까? 이를 알아내는 프로그램을 작성하시오.
//		첫째 줄에 x월 y일이 무슨 요일인지에 따라 SUN, MON, TUE, WED, THU, FRI, SAT중 하나를 출력한다.
		
		
		int[] arr = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };	// 	13의 크기를 가진 배열을 생성
					// 0을 넣어 준 이유는 2월 1일의 경우 => 31+1
																							
		String[] arr2= {"SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"}; // 요일을 나타내줄 배열 생성
	
		Scanner sc2= new Scanner(System.in); 
		
		System.out.println("월을 입력해주세요.");
		
		int month=sc2.nextInt();				// 월 입력    
		System.out.println("일을 입력해주세요.");
		int day=sc2.nextInt();				// 일 입력
		
		for(int i=1; i<=12 ; i++) {	//구하고자하는  일까지의 합을 구하기위해 반복문 사용 
			day+=arr[i-1];			// 일의 누적 
		  if(i==month) {			// 구하고자하는 달의 총일수는 더해지면 안되기때문에  조건문을 사용 
			  break;
		  }
		   
		 				
		}
		System.out.println(day);  // 누적 확인 
		if(day%7==0) {
			System.out.println(arr2[0]);
			}
		else if (day%7==1) {
			System.out.println(arr2[1]);	
		}
		else if (day%7==2) {
			System.out.println(arr2[2]);	
		}
		else if (day%7==3) {
			System.out.println(arr2[3]);	
		}
		else if (day%7==4) {
			System.out.println(arr2[4]);	
		}
		else if (day%7==5) {
			System.out.println(arr2[5]);	
		}
		else {
			System.out.println(arr2[6]);	
		}
	
// switch로 할경우
//		switch(day%7) {
//		case 0: System.out.println(arr2[0]);
//			break;
//		case 1: System.out.println(arr2[1]);
//		break;
//		case 2: System.out.println(arr2[2]);
//		break;
//		case 3: System.out.println(arr2[3]);
//		break;
//		case 4: System.out.println(arr2[4]);
//		break;
//		case 5: System.out.println(arr2[5]);
//		break;
//		case 6: System.out.println(arr2[6]);
//		break;
//		
//		
//		}
//		
		
		
	}

}
